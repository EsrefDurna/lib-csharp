// <auto-generated />
// AUTO-GENERATED FILE - DO NOT MODIFY
// Generated from roundtrip.babel
// Roundtrip all types


using System;
using System.Collections.Generic;

namespace BabelRpc.Demo
{ 
	/// <summary>
	///  Roundtripper service - see if the data you send it actually comes
	///  back in one piece!
	/// </summary>
	[System.CodeDom.Compiler.GeneratedCode("Babel", "")]
	public interface IRoundtripper
	{ 
		/// <summary>
		/// Return back what was sent, changing it if desried
		/// </summary>
		/// <param name="wholesome"> Send in a wholesome data structure</param>
		/// <param name="alter"> Indicates if you want to change it</param>
		Wholesome SendReceive(Wholesome wholesome, bool? alter);

		/// <summary>
		/// Send me some data - I know just what to do with it
		/// </summary>
		/// <param name="wholesome"> Some nice data to file away </param>
		void Send(Wholesome wholesome);

		/// <summary>
		/// I'll send you back some data similar to what you sent
		/// </summary>
		Wholesome Receive();

		/// <summary>
		/// Returns a DefaultTest struct with the X value nulled out
		/// </summary>
		DefaultTest ReturnNulledDefault();

		/// <summary>
		/// Accepts a DefaultTest struct and verifies that X is 32
		/// </summary>
		/// <param name="d"></param>
		bool? AcceptNulledDefault(DefaultTest d);

		/// <summary>
		/// Let's be exceptional
		/// </summary>
		bool? Fail();
	}
	/// <summary>
	///  Roundtripper service - see if the data you send it actually comes
	///  back in one piece!
	/// </summary>
	[System.CodeDom.Compiler.GeneratedCode("Babel", "")]
	public interface IRoundtripperAsync
	{ 
		/// <summary>
		/// Return back what was sent, changing it if desried
		/// </summary>
		/// <param name="wholesome"> Send in a wholesome data structure</param>
		/// <param name="alter"> Indicates if you want to change it</param>
		System.Threading.Tasks.Task<Wholesome> SendReceiveAsync(Wholesome wholesome, bool? alter);

		/// <summary>
		/// Send me some data - I know just what to do with it
		/// </summary>
		/// <param name="wholesome"> Some nice data to file away </param>
		System.Threading.Tasks.Task SendAsync(Wholesome wholesome);

		/// <summary>
		/// I'll send you back some data similar to what you sent
		/// </summary>
		System.Threading.Tasks.Task<Wholesome> ReceiveAsync();

		/// <summary>
		/// Returns a DefaultTest struct with the X value nulled out
		/// </summary>
		System.Threading.Tasks.Task<DefaultTest> ReturnNulledDefaultAsync();

		/// <summary>
		/// Accepts a DefaultTest struct and verifies that X is 32
		/// </summary>
		/// <param name="d"></param>
		System.Threading.Tasks.Task<bool?> AcceptNulledDefaultAsync(DefaultTest d);

		/// <summary>
		/// Let's be exceptional
		/// </summary>
		System.Threading.Tasks.Task<bool?> FailAsync();
	}
}
