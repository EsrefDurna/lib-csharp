// <auto-generated />
// AUTO-GENERATED FILE - DO NOT MODIFY
// Generated from CreditCardDemo.babel

using System;
using System.Collections.Generic;
using BabelRpc;

namespace BabelRpc.Demo
{ 
	/// <summary>
	///  Manipulates with demo credit card info
	/// </summary>
	[System.CodeDom.Compiler.GeneratedCode("Babel", "")]
	public partial class DemoCCController : BabelRpc.Mvc.BabelController<IDemoCC>
	{ 
		class SaveRequest : BabelRpc.Mvc.IBabelRequest
		{ 
			public CreditCard CardInfo;

			#region IBabelRequest
			public void RunOnChildren<T>(BabelModelAction<T> method, T auxData, bool runOnAll = true)
			{
				CardInfo = (CreditCard) method("cardInfo", typeof(CreditCard), CardInfo, auxData);
			}

			public bool RunOnChild<T>(string name, BabelModelAction<T> method, T auxData)
			{
				switch(name)
				{
					case "cardInfo": CardInfo = (CreditCard) method("cardInfo", typeof(CreditCard), CardInfo, auxData); return true;
					default: return false;
				}
			}

			public void SetDefaults()
			{
			}
			#endregion
		}

		/// <summary>
		/// Validates CC info and pretends to save it
		/// </summary>
		/// <param name="cardInfo"></param>
		public void Save()
		{
			var requestData = DeserializeRequest<SaveRequest>();
			m_businessLogic.Save(requestData.CardInfo);
		}

		class GetRandomCardRequest : BabelRpc.Mvc.IBabelRequest
		{ 
			public CCKind? Kind;

			#region IBabelRequest
			public void RunOnChildren<T>(BabelModelAction<T> method, T auxData, bool runOnAll = true)
			{
				if(runOnAll) Kind = (CCKind?) method("kind", typeof(CCKind?), Kind, auxData);
			}

			public bool RunOnChild<T>(string name, BabelModelAction<T> method, T auxData)
			{
				switch(name)
				{
					case "kind": Kind = (CCKind?) method("kind", typeof(CCKind?), Kind, auxData); return true;
					default: return false;
				}
			}

			public void SetDefaults()
			{
			}
			#endregion
		}

		/// <summary>
		/// Gets random demo CC info of given kind
		/// </summary>
		/// <param name="kind"></param>
		public CreditCard GetRandomCard()
		{
			var requestData = DeserializeRequest<GetRandomCardRequest>();
			return m_businessLogic.GetRandomCard(requestData.Kind);
		}
	}
}
