// <auto-generated />
// AUTO-GENERATED FILE - DO NOT MODIFY
// Generated from CreditCardDemo.babel
// Fake storing and manipulations with demo credit card numbers

using System;
using System.Collections.Generic;
using System.Text;
using BabelRpc;

namespace BabelRpc.Demo
{

	[System.CodeDom.Compiler.GeneratedCode("Babel", "")]
	public enum CCKind
	{
		Visa = 0,
		MasterCard = 1,
		Amex = 2
	}

	public class CreditCard : IBabelModel
	{
		/// <summary>
		/// Default constructor
		/// </summary>
		public CreditCard()
		{ 
		}

		/// <summary>
		/// Credit card type
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required]
		public CCKind? Kind { get; set; }

		/// <summary>
		/// Credit card number 
		/// </summary>
		[System.ComponentModel.DataAnnotations.CreditCard, System.ComponentModel.DataAnnotations.Required]
		public string Number { get; set; }

		/// <summary>
		/// Expiration year
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required, System.ComponentModel.DataAnnotations.Range(1980, 2100)]
		public short? ExpirationYear { get; set; }

		/// <summary>
		/// Expiration month
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required, System.ComponentModel.DataAnnotations.Range(1, 12)]
		public byte? ExpirationMonth { get; set; }

		public override string ToString()
		{
			var ser = new BabelJsonSerializer();
			using(var strm = (System.IO.MemoryStream)ser.Serialize(this))
			{
				return (new UTF8Encoding(false)).GetString(strm.ToArray());
			}
		}
		#region IBabelModel
		public virtual void RunOnChildren<T>(BabelModelAction<T> method, T auxData, bool runOnAll = true)
		{
			if(method == null) throw new ArgumentNullException("method");
			if(runOnAll) Kind = (CCKind?) method("Kind", typeof(CCKind?), Kind, auxData);
			if(runOnAll) Number = (string) method("Number", typeof(string), Number, auxData);
			if(runOnAll) ExpirationYear = (short?) method("ExpirationYear", typeof(short?), ExpirationYear, auxData);
			if(runOnAll) ExpirationMonth = (byte?) method("ExpirationMonth", typeof(byte?), ExpirationMonth, auxData);

		}

		public virtual bool RunOnChild<T>(string name, BabelModelAction<T> method, T auxData)
		{
			if(method == null) throw new ArgumentNullException("method");
			switch(name)
			{
				case "Kind": Kind = (CCKind?) method("Kind", typeof(CCKind?), Kind, auxData); return true;
				case "Number": Number = (string) method("Number", typeof(string), Number, auxData); return true;
				case "ExpirationYear": ExpirationYear = (short?) method("ExpirationYear", typeof(short?), ExpirationYear, auxData); return true;
				case "ExpirationMonth": ExpirationMonth = (byte?) method("ExpirationMonth", typeof(byte?), ExpirationMonth, auxData); return true;
				default: return false;
			}
		}
		#endregion
	}

} 
